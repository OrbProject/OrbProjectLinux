name: Package and Release Linux Builds

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Récupérer le numéro de version depuis la release
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Afficher la structure des fichiers
        run: ls -R

      - name: Préparer et construire le package .deb
        run: |
          set -e
          mkdir -p debian/DEBIAN debian/usr/lib/orbproject debian/usr/bin
          cp -r OrbProject.x86_64 OrbProject_Data UnityPlayer.so libdecor-*.so* debian/usr/lib/orbproject/
          ln -s /usr/lib/orbproject/OrbProject.x86_64 debian/usr/bin/orbproject
          cat <<EOF > debian/DEBIAN/control
          Package: orbproject
          Version: $VERSION
          Section: games
          Priority: optional
          Architecture: amd64
          Depends: libc6
          Maintainer: TonNom <ton.email@example.com>
          Description: Un jeu fait avec Unity
          EOF
          dpkg-deb --build debian OrbProject_${VERSION}_amd64.deb

      - name: Sauvegarder le fichier .deb
        uses: actions/upload-artifact@v4
        with:
          name: deb-package
          path: OrbProject_${{ env.VERSION }}_amd64.deb

      - name: Construire le package Flatpak
        run: |
          sudo apt update && sudo apt install -y flatpak flatpak-builder
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

          mkdir -p flatpak-build
          cd flatpak-build
          cat <<EOF > org.orbproject.OrbProject.json
          {
            "app-id": "org.orbproject.OrbProject",
            "runtime": "org.freedesktop.Platform",
            "runtime-version": "21.08",
            "sdk": "org.freedesktop.Sdk",
            "command": "OrbProject.x86_64",
            "modules": [
              {
                "name": "orbproject",
                "buildsystem": "simple",
                "build-commands": [
                  "install -D OrbProject.x86_64 $FLATPAK_DEST/bin/OrbProject.x86_64",
                  "install -D UnityPlayer.so $FLATPAK_DEST/lib/UnityPlayer.so"
                ],
                "sources": [
                  {
                    "type": "file",
                    "path": "../OrbProject.x86_64"
                  },
                  {
                    "type": "file",
                    "path": "../UnityPlayer.so"
                  }
                ]
              }
            ]
          }
          EOF

          flatpak-builder --repo=repo build-dir org.orbproject.OrbProject.json --force-clean

      - name: Sauvegarder les fichiers de build Flatpak
        uses: actions/upload-artifact@v4
        with:
          name: flatpak-build
          path: repo

  publish-flatpak:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Télécharger les fichiers de build Flatpak
        uses: actions/download-artifact@v4
        with:
          name: flatpak-build
          path: repo

      - name: Publier Flatpak
        run: |
          flatpak build-bundle repo OrbProject_${{ env.VERSION }}.flatpak org.orbproject.OrbProject

      - name: Sauvegarder le fichier Flatpak final
        uses: actions/upload-artifact@v4
        with:
          name: flatpak-package
          path: OrbProject_${{ env.VERSION }}.flatpak

  publish-apt:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Télécharger le fichier .deb
        uses: actions/download-artifact@v4
        with:
          name: deb-package
          path: .

      - name: Installer Aptly
        run: sudo apt-get update && sudo apt-get install -y aptly

      - name: Publier avec Aptly
        run: |
          set -e
          aptly repo show orbproject-repo || aptly repo create orbproject-repo
          aptly repo add orbproject-repo OrbProject_${{ env.VERSION }}_amd64.deb
          aptly publish repo -batch -distribution=bullseye -component=main orbproject-repo public

  publish-yum:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Télécharger le fichier RPM
        uses: actions/download-artifact@v4
        with:
          name: rpm-package
          path: artifacts

      - name: Installer createrepo-c
        run: sudo apt update && sudo apt install -y createrepo-c

      - name: Créer le dépôt YUM
        run: |
          set -e
          mkdir -p yum_repo
          cp artifacts/*.rpm yum_repo/
          createrepo_c yum_repo/

      - name: Mettre à jour le dépôt YUM
        run: |
          set -e
          git clone --depth 1 git@github.com:OrbProject/OrbProject-yum.git yum_repo_git
          cp -r yum_repo/* yum_repo_git/
          cd yum_repo_git
          git add .
          git commit -m "Mise à jour du dépôt YUM pour OrbProject v${{ env.VERSION }}"
          git push
